{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/components/client/client.component.ts","./src/app/admin/components/client/client.component.html","./src/app/admin/components/invoice-form/invoice-form.component.ts","./src/app/admin/components/invoice-form/invoice-form.component.html","./src/app/admin/components/invoice/invoice.component.ts","./src/app/admin/components/invoice/invoice.component.html","./src/app/admin/components/main/main.component.ts","./src/app/admin/components/main/main.component.html","./src/app/admin/components/product-form/product-form.component.ts","./src/app/admin/components/product-form/product-form.component.html","./src/app/admin/components/product-list/product-list.component.ts","./src/app/admin/components/product-list/product-list.component.html","./src/app/admin/components/productcate-form/productcate-form.component.ts","./src/app/admin/components/productcate-form/productcate-form.component.html","./src/app/admin/components/productcate-list/productcate-list.component.ts","./src/app/admin/components/productcate-list/productcate-list.component.html","./src/app/admin/layout/sidenav/sidenav.component.ts","./src/app/admin/layout/sidenav/sidenav.component.html","./src/app/admin/layout/toolbar/toolbar.component.ts","./src/app/admin/layout/toolbar/toolbar.component.html","./src/app/admin/services/client.service.ts","./src/app/admin/services/invoice.service.ts","./src/app/admin/services/product-cate.service.ts","./src/app/admin/services/product.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home-routing.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/services/guard-login.guard.ts","./src/app/login/services/jwt.service.ts","./src/app/login/services/login.service.ts","./src/app/shared/material/material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { MainComponent } from './components/main/main.component';\nimport { InvoiceComponent } from './components/invoice/invoice.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { InvoiceFormComponent } from './components/invoice-form/invoice-form.component';\nimport { GuardLoginGuard } from '../login/services/guard-login.guard';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductcateListComponent } from './components/productcate-list/productcate-list.component';\nimport { ProductcateFormComponent } from './components/productcate-form/productcate-form.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminComponent,\n    canActivate: [GuardLoginGuard],\n    children: [\n      {\n        path: '',\n        component: MainComponent,\n      },\n      {\n        path: 'invoice',\n        component: InvoiceComponent,\n      },\n      {\n        path: 'invoice/create',\n        component: InvoiceFormComponent,\n      },\n      {\n        path: 'invoice/:id',\n        component: InvoiceFormComponent,\n      },\n      {\n        path: 'client',\n        component: ClientComponent,\n      },\n      {\n        path: 'product',\n        component: ProductListComponent,\n      },\n      {\n        path: 'product/create',\n        component: ProductFormComponent,\n      },\n      {\n        path: 'product-cate',\n        component: ProductcateListComponent,\n      },\n      {\n        path: 'product-cate/create',\n        component: ProductcateFormComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-sidenav></app-sidenav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { CKEditorModule } from 'ng2-ckeditor';\n\nimport { SidenavComponent } from './layout/sidenav/sidenav.component';\nimport { MainComponent } from './components/main/main.component';\nimport { InvoiceComponent } from './components/invoice/invoice.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { AdminComponent } from './admin.component';\nimport { ToolbarComponent } from './layout/toolbar/toolbar.component';\nimport { InvoiceFormComponent } from './components/invoice-form/invoice-form.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductcateListComponent } from './components/productcate-list/productcate-list.component';\nimport { ProductcateFormComponent } from './components/productcate-form/productcate-form.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component'\n\nimport { InvoiceService } from './services/invoice.service';\nimport { ClientService } from './services/client.service';\nimport { ProductCateService } from './services/product-cate.service';\nimport { ProductService } from './services/product.service';\n\n@NgModule({\n  declarations: [\n    SidenavComponent,\n    MainComponent,\n    InvoiceComponent,\n    ClientComponent,\n    AdminComponent,\n    ToolbarComponent,\n    InvoiceFormComponent,\n    ProductListComponent,\n    ProductcateListComponent,\n    ProductcateFormComponent,\n    ProductFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    CKEditorModule\n  ],\n  providers: [InvoiceService, ClientService, ProductCateService, ProductService],\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Client } from './../../models/client';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.css'],\n})\nexport class ClientComponent implements OnInit {\n  displayedColumns = ['firstName', 'lastName', 'email'];\n  dataSource: Client[];\n  constructor(private clientService: ClientService) {}\n\n  ngOnInit(): void {\n    this.getAllClient();\n  }\n  getAllClient() {\n    return this.clientService.getAllClient().subscribe(\n      (data) => {\n        this.dataSource = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"table-container mat-elevation-z10\">\n  <mat-table [dataSource]=\"dataSource\">\n    <ng-container matColumnDef=\"firstName\">\n      <mat-header-cell *matHeaderCellDef> firstName\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.firstName}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"lastName\">\n      <mat-header-cell *matHeaderCellDef> lastName\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.lastName}} </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef> email\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let element\"> {{element.email}} </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { InvoiceService } from '../../services/invoice.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Invoice } from '../../models/invoice';\nimport { Client } from './../../models/client';\nimport { ClientService } from '../../services/client.service';\n\n@Component({\n  selector: 'app-invoice-form',\n  templateUrl: './invoice-form.component.html',\n  styleUrls: ['./invoice-form.component.css'],\n})\nexport class InvoiceFormComponent implements OnInit {\n  invoice: Invoice;\n  invoiceForm: FormGroup;\n  title = 'Create Invoice';\n  titlebtn = 'Create';\n  clients: Client[];\n  constructor(\n    private fb: FormBuilder,\n    private invoiceService: InvoiceService,\n    private router: Router,\n    private matSnackBar: MatSnackBar,\n    private route: ActivatedRoute,\n    private clientService: ClientService\n  ) {\n    this.invoiceForm = this.fb.group({\n      item: ['', Validators.required],\n      price: ['', Validators.required],\n      qty: ['', Validators.required],\n      date: ['', Validators.required],\n      client: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.setInvoiceToForm();\n    this.setClients();\n  }\n  onSubmit() {\n    if (this.invoice) {\n      this.invoiceService\n        .updateInvoice(this.invoice._id, this.invoiceForm.value)\n        .subscribe(\n          (data) => {\n            this.router.navigate(['admin', 'invoice']);\n            this.matSnackBar.open('success', 'Update Invoice', {\n              duration: 3000,\n            });\n          },\n          (error) => {\n            this.router.navigate(['admin', 'invoice']);\n            this.matSnackBar.open('false', 'Update Invoice', {\n              duration: 3000,\n            });\n          }\n        );\n    } else {\n      this.invoiceService.createInvoice(this.invoiceForm.value).subscribe(\n        (data) => {\n          this.router.navigate(['admin', 'invoice']);\n          this.matSnackBar.open('success', 'createInvoice', {\n            duration: 3000,\n          });\n        },\n        (error) => {\n          this.router.navigate(['admin', 'invoice']);\n          this.matSnackBar.open('false', 'createInvoice', {\n            duration: 3000,\n          });\n        }\n      );\n    }\n  }\n  setInvoiceToForm() {\n    this.route.params.subscribe((params) => {\n      let id = params['id'];\n      if (!id) {\n        return;\n      }\n      this.title = 'Edit Invoice';\n      this.titlebtn = 'Update';\n      this.invoiceService.getOneInvoice(id).subscribe((invoice) => {\n        this.invoice = invoice;\n        this.invoiceForm.patchValue(this.invoice);\n      });\n    });\n  }\n  setClients() {\n    this.clientService.getAllClient().subscribe(\n      (data) => {\n        this.clients = data;\n      },\n      (error) => {\n        this.matSnackBar.open('false', 'Get Clients', { duration: 3000 });\n      }\n    );\n  }\n}\n","<mat-card>\n  <h3>{{title}}</h3>\n  <form class=\"form-container\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"invoiceForm\">\n    <mat-form-field color=\"accent\">\n      <input matInput type=\"text\" placeholder=\"Item\" formControlName=\"item\">\n      <mat-error *ngIf=\"invoiceForm.controls.item.invalid && invoiceForm.controls.item.touched\">Please fill email\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field color=\"accent\">\n      <input matInput type=\"text\" placeholder=\"price\" formControlName=\"price\">\n      <mat-error *ngIf=\"invoiceForm.controls.price.invalid && invoiceForm.controls.price.touched\">Please fill price\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field color=\"accent\">\n      <input matInput type=\"text\" placeholder=\"qty\" formControlName=\"qty\">\n    </mat-form-field>\n    <mat-form-field color=\"accent\">\n      <input matInput placeholder=\"date\" formControlName=\"date\" [matDatepicker]=\"picker\">\n      <mat-datepicker-toggle [for]=\"picker\" matSuffix></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-select placeholder=\"Select Client\" formControlName=\"client\">\n        <mat-option *ngFor=\"let c of clients\" [value]=\"c._id\">\n          {{c.firstName}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <div>\n      <button mat-raised-button color=\"accent\" [disabled]=\"invoiceForm.invalid\">Create</button>\n    </div>\n  </form>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InvoiceService } from '../../services/invoice.service';\nimport { Invoice } from '../../models/invoice';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort, Sort } from '@angular/material/sort';\n\n@Component({\n  selector: 'app-invoice',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.css'],\n})\nexport class InvoiceComponent implements OnInit {\n  isLoading = false;\n  isHaveData = false;\n  resultLength = 0;\n  sortField: string;\n  sortDir: string;\n  page = 1;\n  perPage = 10;\n  filter: string;\n  displayedColumns: string[] = [\n    'index',\n    'item',\n    'price',\n    'qty',\n    'date',\n    'action',\n  ];\n  dataSource2: Invoice[];\n  constructor(\n    private invoiceService: InvoiceService,\n    private router: Router,\n    private snackbar: MatSnackBar\n  ) {}\n  ngOnInit(): void {\n    this.getInvoice();\n  }\n  getInvoice() {\n    this.isLoading = true;\n    return this.invoiceService\n      .getInvoice({\n        page: 1,\n        perPage: 10,\n        sortField: this.sortField,\n        sortDir: this.sortDir,\n        filter: this.filter,\n      })\n      .subscribe(\n        (data) => {\n          this.dataSource2 = data.docs;\n          this.resultLength = data.totalDocs;\n          this.isHaveData = true;\n          this.isLoading = false;\n        },\n        (error) => {\n          this.isLoading = false;\n          this.snackbar.open('false', 'Load Data', { duration: 3000 });\n        }\n      );\n  }\n  createInvoice() {\n    this.router.navigate(['admin/invoice/create']);\n  }\n  deleteInvoice(id: string) {\n    return this.invoiceService.deleteInvoice(id).subscribe(\n      (data) => {\n        const data2 = this.dataSource2.filter((item) => item._id !== data._id);\n        this.dataSource2 = [...data2];\n        this.resultLength = this.resultLength - 1;\n      },\n      (error) => {\n        this.snackbar.open('false', 'Delete Invoice', { duration: 3000 });\n      }\n    );\n  }\n  updateInvoice(id) {\n    this.router.navigate(['admin', 'invoice', id]);\n  }\n  onPageChanged(e) {\n    this.isLoading = true;\n    this.page = ++e.pageIndex;\n    this.perPage = e.pageSize;\n    return this.invoiceService\n      .getInvoice({\n        page: this.page,\n        perPage: this.perPage,\n        sortField: this.sortField,\n        sortDir: this.sortDir,\n        filter: this.filter,\n      })\n      .subscribe(\n        (data) => {\n          this.isLoading = false;\n          this.dataSource2 = data.docs;\n        },\n        (error) => {\n          this.isLoading = false;\n          this.snackbar.open('false', 'Get Invoice', { duration: 3000 });\n        }\n      );\n  }\n  sortData(sort: Sort) {\n    this.sortField = sort.active;\n    this.sortDir = sort.direction;\n    return this.invoiceService\n      .getInvoice({\n        page: this.page,\n        perPage: this.perPage,\n        sortField: this.sortField,\n        sortDir: this.sortDir,\n        filter: this.filter,\n      })\n      .subscribe(\n        (data) => {\n          this.dataSource2 = data.docs;\n        },\n        (error) => {\n          this.snackbar.open('false', 'Get Invoice', { duration: 3000 });\n        }\n      );\n  }\n  filterChange(filter: string) {\n    this.filter = filter.trim();\n    return this.invoiceService\n      .getInvoice({\n        page: this.page,\n        perPage: this.perPage,\n        sortField: this.sortField,\n        sortDir: this.sortDir,\n        filter: this.filter,\n      })\n      .subscribe(\n        (data) => {\n          this.dataSource2 = data.docs;\n          this.resultLength = data.totalDocs;\n        },\n        (error) => {\n          this.snackbar.open('false', 'Get Invoice', { duration: 3000 });\n        }\n      );\n  }\n}\n","<div class=\"spinnercontainer\" *ngIf=\"isLoading\">\n  <mat-spinner color=\"accent\"></mat-spinner>\n</div>\n<div class=\"tablecontainer mat-elevation-z10\">\n  <div *ngIf=\"!isLoading\">\n    <mat-toolbar>\n      <mat-form-field color=\"accent\">\n        <input type=\"text\" matInput placeholder=\"Filter\" (keyup)=\"filterChange($event.target.value)\">\n      </mat-form-field>\n      <button mat-raised-button color=\"accent\" class=\"forminvoice\" (click)=\"createInvoice()\">New Invoices</button>\n    </mat-toolbar>\n    <mat-table [dataSource]=\"dataSource2\" matSort (matSortChange)=\"sortData($event)\">\n      <ng-container matColumnDef=\"index\">\n        <mat-header-cell *matHeaderCellDef> No.\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let index=index\"> {{index+1}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"item\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> item\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.item}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"price\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> price\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.price | currency :'USD'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"qty\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> qty\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.qty}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"date\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> date\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.date | date :'d/M/yyyy'}} </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"action\">\n        <mat-header-cell *matHeaderCellDef> action\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n          <button mat-button [matMenuTriggerFor]=\"menuRef\">\n            <mat-icon>\n              more_vert\n            </mat-icon>\n          </button>\n          <mat-menu #menuRef=\"matMenu\">\n            <button mat-menu-item (click)=\"updateInvoice(element._id)\">\n              <mat-icon>editor</mat-icon>\n              Editor\n            </button>\n            <button mat-menu-item (click)=\"deleteInvoice(element._id)\">\n              <mat-icon>\n                delete\n              </mat-icon>\n              Delete\n            </button>\n          </mat-menu>\n        </mat-cell>\n      </ng-container>\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n  </div>\n  <mat-paginator #paginator [length]=\"resultLength\" [pageSize]=\"10\" [pageSizeOptions]=\"[5,10,20,100]\" [pageIndex]=\"0\"\n    [showFirstLastButtons]=\"true\" (page)=\"onPageChanged($event)\">\n  </mat-paginator>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>main works!</p>\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductCateService } from '../../services/product-cate.service';\nimport { ProductCate } from '../../models/product-cate';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\nimport * as DecoupledEditor from '@ckeditor/ckeditor5-build-decoupled-document';\nimport { UploadAdapter } from '../../services/upload-adapter.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ProductService } from '../../services/product.service';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})\nexport class ProductFormComponent implements OnInit {\n  @Input() url: string = `${environment.BASE_URL}/upload`;\n  @Input() config?: Object = {};\n  @ViewChild('toolbar') toolbar: ElementRef<any>;\n  @ViewChild('ckeditor') ckeditor: any;\n  public Editor = DecoupledEditor;\n  productForm: FormGroup;\n  productCate: ProductCate[];\n  imgURL: string;\n  ckeConfig: any;\n  url2: string = \"http://35.225.51.29:3000/lg1595304613950.png\";\n\n  constructor(\n    private fb: FormBuilder,\n    private productCateService: ProductCateService,\n    private snackBar: MatSnackBar,\n    private http: HttpClient,\n    private productService: ProductService\n  ) {\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      productCate: ['', Validators.required],\n      file: [null],\n      status: [true],\n      home: [false],\n      position: [0],\n      introduction: ['Product Introduction'],\n      description: ['Product Description']\n\n    })\n  }\n\n  ngOnInit(): void {\n    this.ckeConfig = {\n      allowedContent: false,\n      forcePasteAsPlainText: true\n    };\n    this.getProductCate();\n  }\n  onSubmit() {\n    let fd = new FormData();\n    fd.append('name', this.productForm.get('name').value);\n    fd.append('product_cate', this.productForm.get('productCate').value);\n    fd.append('status', this.productForm.get('status').value);\n    fd.append('home', this.productForm.get('home').value);\n    fd.append('position', this.productForm.get('position').value);\n    fd.append('intro', this.productForm.get('introduction').value);\n    fd.append('description', this.productForm.get('description').value);\n    fd.append('file', this.productForm.get('file').value);\n    this.productService.createProduct(fd).subscribe((data) => {\n      console.log(data);\n\n    }, (error) => {\n      console.log(error);\n\n    })\n\n  }\n  getProductCate() {\n    this.productCateService.getAllProductCate().subscribe((data) => {\n      this.productCate = data;\n    }, (error) => {\n      this.snackBar.open('false', 'Get Product Category', { duration: 3000 })\n    })\n  }\n  uploadFile(e) {\n    const file = (e.target as HTMLInputElement).files[0];\n    this.productForm.patchValue({ file: file });\n    this.productForm.get('file').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imgURL = reader.result as string;\n    }\n    reader.readAsDataURL(file);\n  }\n  onFileUploadRequest(e) {\n    console.log(e);\n\n  }\n  openImageExplorer($event) {\n    try {\n      let link = this.ckeditor.instance.document.createElement(\"img\");\n      link.setAttribute(\"alt\", \"image\");\n      link.setAttribute(\"src\", `${this.url2}`);\n      this.ckeditor.instance.insertElement(link);\n    } catch (error) {\n      console.log(error);\n\n    }\n  }\n}\n","<mat-card>\n    {{productForm.value | json}}\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"productForm\" class=\"formContainer\">\n        <mat-form-field color=\"accent\" class=\"form-control\">\n            <input matInput placeholder=\"Product Name\" formControlName=\"name\">\n            <mat-error *ngIf=\"productForm.controls.name.invalid && productForm.controls.name.touched\">\n                Please fill\n                Product Name</mat-error>\n        </mat-form-field>\n        <mat-form-field color=\"accent\" class=\"form-control\">\n            <mat-select placeholder=\"Product Category\" formControlName=\"productCate\">\n                <mat-option *ngFor=\"let proCate of productCate\" value=\"{{proCate._id}}\">{{proCate.name}}</mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"productForm.controls.productCate.invalid && productForm.controls.productCate.touched\">\n                Please choose Product Category</mat-error>\n        </mat-form-field>\n        <div class=\"form-control\">\n            <ng-container *ngIf=\"imgURL && imgURL != ''\">\n                <img src=\"{{imgURL}}\" height=\"100px\">\n            </ng-container>\n        </div>\n        <div class=\"form-control\">\n            <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Product Photo</button>\n            <input type=\"file\" hidden #filePicker accept=\"image/*\" (change)=\"uploadFile($event)\">\n        </div>\n        <div class=\"form-control\">\n            <mat-slide-toggle formControlName=\"status\">\n                Product Status\n            </mat-slide-toggle>\n        </div>\n        <div class=\"form-control\">\n            <mat-slide-toggle formControlName=\"home\">\n                Product Home\n            </mat-slide-toggle>\n        </div>\n        <mat-form-field class=\"form-control\" color=\"accent\">\n            <input type=\"number\" formControlName=\"position\" placeholder=\"Product Position\" matInput>\n        </mat-form-field>\n        <div class=\"form-control\">\n            <ckeditor [config]=\"ckeConfig\" #ckeditor formControlName=\"introduction\">\n                <ckbutton [name]=\"'saveButton'\" [command]=\"'saveCmd'\" (click)=\"openImageExplorer($event)\"\n                    [icon]=\"'save.png'\" [label]=\"'Save Document'\" [toolbar]=\"'clipboard,1'\">\n                </ckbutton>\n            </ckeditor>\n        </div>\n        <div class=\"form-control\">\n            <ckeditor [config]=\"ckeConfig\" #ckeditor formControlName=\"description\">\n                <ckbutton [name]=\"'saveButton'\" [command]=\"'saveCmd'\" (click)=\"openImageExplorer($event)\"\n                    [icon]=\"'save.png'\" [label]=\"'Save Document'\" [toolbar]=\"'clipboard,1'\">\n                </ckbutton>\n            </ckeditor>\n        </div>\n        <div class=\"btnsubmit\">\n            <button type=\"submit\" mat-raised-button color=\"accent\">Create</button>\n        </div>\n    </form>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../services/product.service';\nimport { Product } from '../../models/product';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  displayedColumns: string[] = ['index', 'name', 'price']\n  dataSource = [\n    { id: 1, name: 'iphone 4', price: 200 },\n    { id: 2, name: 'iphone 5', price: 300 },\n    { id: 3, name: 'iphone 6', price: 400 },\n    { id: 4, name: 'iphone 7', price: 500 },\n  ]\n  dataProduct: Product[];\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.getAllProduct();\n  }\n  getAllProduct() {\n    return this.productService.getAllProduct().subscribe((data) => {\n      console.log(data);\n\n      this.dataProduct = data;\n\n    }, (error) => {\n      console.log(error);\n\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z10\">\n    <mat-toolbar>\n        <button mat-raised-button color=\"accent\" [routerLink]=\"['create']\">New Product</button>\n    </mat-toolbar>\n\n    <mat-table [dataSource]=\"dataSource\">\n        <ng-container matColumnDef=\"index\">\n            <mat-header-cell *matHeaderCellDef> STT\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n            <mat-header-cell *matHeaderCellDef> Name\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"price\">\n            <mat-header-cell *matHeaderCellDef> price\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.price}} </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ProductCateService } from '../../services/product-cate.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-productcate-form',\n  templateUrl: './productcate-form.component.html',\n  styleUrls: ['./productcate-form.component.css']\n})\nexport class ProductcateFormComponent implements OnInit {\n  productForm: FormGroup;\n  imgUrl: string;\n  constructor(\n    private fb: FormBuilder,\n    private productCateService: ProductCateService,\n    private router: Router,\n    private snackbar: MatSnackBar) {\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      file: [null],\n      status: [true],\n      description: [''],\n      position: [''],\n    })\n  }\n\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    let fd: any = new FormData();\n    fd.append('name', this.productForm.get('name').value);\n    fd.append('photo', this.productForm.get('file').value);\n    fd.append('status', this.productForm.get('status').value);\n    fd.append('description', this.productForm.get('description').value);\n    fd.append('position', this.productForm.get('position').value);\n\n    this.productCateService.createProductCate(fd).subscribe((data) => {\n      this.snackbar.open('Success', 'Create Product-Cate', { duration: 3000 })\n      this.router.navigate(['admin', 'product-cate']);\n\n    }, (error) => {\n      this.snackbar.open('False', 'Create Product-Cate', { duration: 3000 })\n\n    })\n  }\n  uploadFile(e) {\n    const file = (e.target as HTMLInputElement).files[0];\n    this.productForm.patchValue({ file: file })\n    this.productForm.get('file').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imgUrl = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n}\n","<mat-card>\n    {{productForm.value | json}}\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"productForm\" class=\"form-container\">\n        <mat-form-field color=\"accent\" class=\"formControl\">\n            <input type=\"text\" matInput formControlName=\"name\" name=\"name\" placeholder=\"Category Name\">\n        </mat-form-field>\n        <div class=\"formControl\" *ngIf=\"imgUrl && imgUrl !== ''\">\n            <img [src]=\"imgUrl\" height=\"100px\">\n        </div>\n        <div class=\"formControl\">\n            <button mat-stroked-button type=\"button\" (click)=\"pickerfile.click()\">Category\n                Photo</button>\n            <input type=\"file\" (change)=\"uploadFile($event)\" hidden #pickerfile accept=\"image/*\">\n        </div>\n        <div class=\"formControl\">\n            <mat-slide-toggle formControlName=\"status\">Category Status</mat-slide-toggle>\n        </div>\n        <mat-form-field color=\"accent\" class=\"formControl\">\n            <input type=\"text\" matInput placeholder=\"Category Description\" formControlName=\"description\">\n        </mat-form-field>\n        <mat-form-field color=\"accent\" class=\"formControl\">\n            <input type=\"number\" matInput placeholder=\"Category Position\" formControlName=\"position\" value=\"0\">\n        </mat-form-field>\n        <div>\n            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"productForm.invalid\">Create</button>\n            <button type=\"button\" mat-raised-button class=\"btncancel\"\n                [routerLink]=\"['/admin/product-cate']\">Cancel</button>\n        </div>\n    </form>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductCateService } from '../../services/product-cate.service';\nimport { ProductCate } from '../../models/product-cate';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-productcate-list',\n  templateUrl: './productcate-list.component.html',\n  styleUrls: ['./productcate-list.component.css']\n})\nexport class ProductcateListComponent implements OnInit {\n  displayedColumns: string[] = ['index', 'name', 'photo', 'position', 'status', 'action'];\n  dataProductCate: ProductCate[];\n  base_url = environment.BASE_URL;\n  isLoading = false;\n  constructor(private router: Router, private productCateService: ProductCateService) { }\n\n  ngOnInit(): void {\n    this.getAllProductCate();\n  }\n  createProductCate() {\n    this.router.navigate(['admin', 'product-cate', 'create'])\n  }\n\n  getAllProductCate() {\n    this.isLoading = true;\n    return this.productCateService.getAllProductCate().subscribe((data) => {\n      this.dataProductCate = data;\n      this.isLoading = false;\n\n    }, (error) => {\n      console.log(error);\n\n    })\n  }\n}\n","<div class=\"loadingne\" *ngIf=\"isLoading\">\n    <mat-spinner color=\"accent\"></mat-spinner>\n</div>\n<div *ngIf=\"!isLoading\" class=\"mat-elevation-z10\">\n    <mat-toolbar>\n        <button mat-raised-button color=\"accent\" (click)=\"createProductCate()\" class=\"btncreate\">New Product\n            Cate</button>\n    </mat-toolbar>\n    <mat-table [dataSource]=\"dataProductCate\">\n        <ng-container matColumnDef=\"index\">\n            <mat-header-cell *matHeaderCellDef> STT\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let index = index\"> {{index+1}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"name\">\n            <mat-header-cell *matHeaderCellDef> Name\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"photo\">\n            <mat-header-cell *matHeaderCellDef> Photo\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <img src=\"{{base_url+'/'+element.photo}}\" height=\"100px\">\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"status\">\n            <mat-header-cell *matHeaderCellDef> Status\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button mat-raised-button color=\"accent\" *ngIf=\"element.status\">Show</button>\n                <button mat-raised-button color=\"primary\" *ngIf=\"!element.status\">Hidden</button>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"position\">\n            <mat-header-cell *matHeaderCellDef> Position\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"action\">\n            <mat-header-cell *matHeaderCellDef> Action\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button mat-button [matMenuTriggerFor]=\"menuRef\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menuRef=\"matMenu\">\n                    <button mat-menu-item>\n                        <mat-icon>editor</mat-icon>\n                        Editor\n                    </button>\n                    <button mat-menu-item>\n                        <mat-icon>delete</mat-icon>\n                        Delete\n                    </button>\n                </mat-menu>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n</div>","import { Component, OnInit } from '@angular/core';\n\nconst MAX_WIDTH = 720;\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.css'],\n})\nexport class SidenavComponent implements OnInit {\n  screenWidth: number;\n  constructor() {\n    this.screenWidth = window.innerWidth;\n    window.onresize = () => {\n      this.screenWidth = window.innerWidth;\n    };\n  }\n\n  ngOnInit(): void {}\n  isSmallScreen(): boolean {\n    return this.screenWidth < 720;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav [mode]=\"isSmallScreen() ? 'over' : 'side'\" [opened]=\"!isSmallScreen()\">\n    <mat-toolbar color=\"accent\">\n      <button mat-button [routerLink]=\"['/admin']\">Dashboard</button>\n    </mat-toolbar>\n    <mat-nav-list>\n      <mat-list-item>\n        <button mat-raised-button [routerLink]=\"['/admin/invoice']\" color=\"accent\">Invoice</button>\n      </mat-list-item>\n      <mat-list-item>\n        <button mat-raised-button [routerLink]=\"['/admin/client']\" color=\"accent\">Client</button>\n      </mat-list-item>\n      <mat-list-item>\n        <button mat-raised-button [matMenuTriggerFor]=\"menu\" color=\"accent\">Product Manage</button>\n        <mat-menu #menu=\"matMenu\">\n          <button mat-menu-item [routerLink]=\"['/admin/product-cate']\">Product Cate</button>\n          <button mat-menu-item [routerLink]=\"['/admin/product']\">Products</button>\n        </mat-menu>\n      </mat-list-item>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-toolbar (sideNavToggle)=\"sidenav.toggle()\"></app-toolbar>\n    <div class=\"content\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css'],\n})\nexport class ToolbarComponent implements OnInit {\n  @Output() sideNavToggle = new EventEmitter<void>();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-toolbar color=\"accent\">\n  <button mat-button (click)=\"sideNavToggle.emit()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from './../models/client';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientService {\n  constructor(private http: HttpClient) {}\n  getAllClient(): Observable<Client[]> {\n    return this.http.get<Client[]>(`${environment.API_URL}/client`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Invoice, InvoicePaginate } from '../models/invoice';\nimport { query } from '@angular/animations';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvoiceService {\n  constructor(private http: HttpClient) {}\n  getInvoice({\n    page,\n    perPage,\n    sortField,\n    sortDir,\n    filter,\n  }): Observable<InvoicePaginate> {\n    let query = `${environment.API_URL}/invoice?page=${page}&perPage=${perPage}`;\n    if (sortField && sortDir) {\n      query = `${query}&sortField=${sortField}&sortDir=${sortDir}`;\n    }\n    if (filter) {\n      query = `${query}&filter=${filter}`;\n    }\n    return this.http.get<InvoicePaginate>(query);\n  }\n  createInvoice(data: Invoice): Observable<Invoice> {\n    return this.http.post<Invoice>(`${environment.API_URL}/invoice`, data);\n  }\n  deleteInvoice(id: string): Observable<Invoice> {\n    return this.http.delete<Invoice>(`${environment.API_URL}/invoice/${id}`);\n  }\n  getOneInvoice(id: string): Observable<Invoice> {\n    return this.http.get<Invoice>(`${environment.API_URL}/invoice/${id}`);\n  }\n  updateInvoice(id: string, data: Invoice): Observable<Invoice> {\n    return this.http.put<Invoice>(`${environment.API_URL}/invoice/${id}`, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ProductCate } from '../models/product-cate';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductCateService {\n\n  constructor(private http: HttpClient) { }\n  getAllProductCate(): Observable<ProductCate[]> {\n    return this.http.get<ProductCate[]>(`${environment.API_URL}/product-cate`)\n  }\n\n\n  createProductCate(data): Observable<ProductCate> {\n    return this.http.post<ProductCate>(`${environment.API_URL}/product-cate`, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../models/product';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n  createProduct(body): Observable<Product> {\n    return this.http.post<Product>(`${environment.API_URL}/product`, body)\n  }\n  getAllProduct(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${environment.API_URL}/product`)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'admin',\n    loadChildren: () =>\n      import('./admin/admin.module').then((m) => m.AdminModule),\n  },\n  {\n    path: '',\n    loadChildren: () => import('./home/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'web1';\n}\n","<button mat-button color=\"accent\" [routerLink]=\"['/admin']\">admin</button>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './shared/material/material.module';\nimport { AdminModule } from './admin/admin.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeModule } from './home/home.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginModule } from './login/login.module';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    MaterialModule,\n    AdminModule,\n    BrowserAnimationsModule,\n    HomeModule,\n    HttpClientModule,\n    LoginModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomeRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<button mat-button color=\"accent\" [routerLink]=\"['/admin']\">admin</button>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { MaterialModule } from '../shared/material/material.module';\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    MaterialModule\n  ]\n})\nexport class HomeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { LoginService } from './services/login.service';\nimport { Router } from '@angular/router';\nimport { JwtService } from './services/jwt.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  formLogin: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private loginService: LoginService,\n    private router: Router,\n    private jwtService: JwtService\n  ) {\n    this.formLogin = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {}\n  onSubmit() {\n    this.loginService.login(this.formLogin.value).subscribe(\n      (data) => {\n        this.jwtService.createToken(data.token);\n        this.router.navigate(['admin', 'invoice']);\n        console.log(data);\n      },\n      (error) => console.log(error)\n    );\n  }\n}\n","<div class=\"khoilogin\">\n  <mat-card>\n    <h2>Login</h2>\n    <form class=\"form-login\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"formLogin\">\n      <mat-form-field color=\"accent\">\n        <input type=\"text\" matInput placeholder=\"email\" formControlName=\"email\">\n      </mat-form-field>\n      <mat-form-field color=\"accent\">\n        <input type=\"password\" matInput placeholder=\"password\" formControlName=\"password\">\n      </mat-form-field>\n      <div class=\"btnsubmit\">\n        <button mat-raised-button color=\"accent\">Login</button>\n      </div>\n    </form>\n  </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { LoginService } from './services/login.service';\nimport { JwtService } from './services/jwt.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { GuardLoginGuard } from './services/guard-login.guard';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, MaterialModule, ReactiveFormsModule],\n  providers: [LoginService, JwtService, GuardLoginGuard],\n})\nexport class LoginModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, CanActivateChild } from '@angular/router';\nimport { JwtService } from './jwt.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GuardLoginGuard implements CanActivate, CanActivateChild {\n  constructor(private router: Router, private jwtService: JwtService) {}\n  canActivate(): boolean {\n    if (this.jwtService.getToken()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n  canActivateChild() {\n    return this.canActivate();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JwtService {\n  constructor() {}\n  createToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n  getToken(): boolean {\n    return !!localStorage.getItem('token');\n  }\n  destroyToken() {\n    localStorage.removeItem('token');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataLogin } from '../models/data-login';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  constructor(private http: HttpClient) {}\n  login(data): Observable<DataLogin> {\n    return this.http.post<DataLogin>(`${environment.API_URL}/user/login`, data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nconst MATMODULE = [\n  MatSidenavModule,\n  MatButtonModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatListModule,\n  MatTableModule,\n  MatSortModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatSnackBarModule,\n  MatMenuModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatSelectModule,\n  MatSlideToggleModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ...MATMODULE],\n  exports: [...MATMODULE],\n})\nexport class MaterialModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'http://35.225.51.29:3000/api',\n  BASE_URL: 'http://35.225.51.29:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n"],"sourceRoot":"webpack:///"}